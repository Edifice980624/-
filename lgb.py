import numpy as npimport pandas as pdimport timeimport datetimefrom sklearn.model_selection import KFold, cross_val_score, train_test_splitimport lightgbm as lgbstart = time.time()# 加特征后用这个train = pd.read_csv('D:/train.csv')test = pd.read_csv('D:/test.csv')# 删除没用的特征drop = ['时间', '房屋朝向', '小区名', '楼层', '位置']train['房屋面积'] = (train['房屋面积']*100)**2test['房屋面积'] = (test['房屋面积']*100)**2train['卫的数量'] = (train['卫的数量']*10)**2test['卫的数量'] = (test['卫的数量']*10)**2# train['总楼层'] = train['总楼层']*100# test['总楼层'] = test['总楼层']*100y_train = train.pop('月租金')# all_data = pd.concat([train, test])res = pd.DataFrame()res['id'] = test['id']train.drop(drop, axis=1, inplace=True)print('train:', train.shape)test.drop(drop, axis=1, inplace=True)print('test:', test.shape)X, y, X_test = train, y_train, testparams = {'boosting_type': 'gbdt',          'num_leaves': 28,          'max_depth': -1,          'objective': 'regression',          'learning_rate': 0.1,          'seed': 2018,          'num_threads': -1,          'max_bin': 425,          "metric": "rmse",          # "lambda_l1": 0.1,          "lambda_l2": 0.2,          }x_train = Xx_test = test.drop(columns=["id"])x_train, x_val, y_train, y_val = train_test_split(x_train, y_train, test_size=0.2, random_state=42)train_data = lgb.Dataset(x_train, label=y_train.values.flatten())val_data = lgb.Dataset(x_val, label=y_val.values.flatten())clf = lgb.train(params, train_set=train_data, num_boost_round=50000, valid_sets=[train_data, val_data],                  valid_names=['train', 'valid'], early_stopping_rounds=50, feval=None, verbose_eval=50)'''importance = pd.DataFrame({    'column': train.columns,    'importance': clf.feature_importance(),}).sort_values(by='importance')pd.DataFrame(importance).to_csv('../data/feature_importance.csv', index=None)'''res['price'] = clf.predict(x_test)print('price mean:%d', res['price'].mean())now = datetime.datetime.now()now = now.strftime('%m-%d-%H-%M')res.to_csv("baseline1714.csv", index=None)